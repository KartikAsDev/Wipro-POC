{"ast":null,"code":"// ================================= Mock Server Start =============================\nvar FAILURE_COEFF = 10;\nvar MAX_SERVER_LATENCY = 200;\n\nfunction getRandomBool(n) {\n  var maxRandomCoeff = 1000;\n  if (n > maxRandomCoeff) n = maxRandomCoeff;\n  return Math.floor(Math.random() * maxRandomCoeff) % n === 0;\n}\n\nexport function getSuggestions(text) {\n  var pre = 'pre';\n  var post = 'post';\n  var results = [];\n\n  if (getRandomBool(2)) {\n    results.push(pre + text);\n  }\n\n  if (getRandomBool(2)) {\n    results.push(text);\n  }\n\n  if (getRandomBool(2)) {\n    results.push(text + post);\n  }\n\n  if (getRandomBool(2)) {\n    results.push(pre + text + post);\n  }\n\n  return new Promise((resolve, reject) => {\n    var randomTimeout = Math.random() * MAX_SERVER_LATENCY;\n    setTimeout(() => {\n      if (getRandomBool(FAILURE_COEFF)) {\n        reject();\n      } else {\n        resolve(results);\n      }\n    }, randomTimeout);\n  });\n} // ================================= Mock Server End =============================","map":{"version":3,"sources":["/Users/Kartik/Desktop/my-app/src/mock-server.js"],"names":["FAILURE_COEFF","MAX_SERVER_LATENCY","getRandomBool","n","maxRandomCoeff","Math","floor","random","getSuggestions","text","pre","post","results","push","Promise","resolve","reject","randomTimeout","setTimeout"],"mappings":"AAAA;AACA,IAAIA,aAAa,GAAG,EAApB;AACA,IAAIC,kBAAkB,GAAG,GAAzB;;AAEA,SAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,MAAIC,cAAc,GAAG,IAArB;AACA,MAAID,CAAC,GAAGC,cAAR,EAAwBD,CAAC,GAAGC,cAAJ;AACxB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,cAA3B,IAA6CD,CAA7C,KAAmD,CAA1D;AACD;;AAED,OAAO,SAASK,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,MAAIC,GAAG,GAAG,KAAV;AACA,MAAIC,IAAI,GAAG,MAAX;AACA,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAIV,aAAa,CAAC,CAAD,CAAjB,EAAsB;AACpBU,IAAAA,OAAO,CAACC,IAAR,CAAaH,GAAG,GAAGD,IAAnB;AACD;;AACD,MAAIP,aAAa,CAAC,CAAD,CAAjB,EAAsB;AACpBU,IAAAA,OAAO,CAACC,IAAR,CAAaJ,IAAb;AACD;;AACD,MAAIP,aAAa,CAAC,CAAD,CAAjB,EAAsB;AACpBU,IAAAA,OAAO,CAACC,IAAR,CAAaJ,IAAI,GAAGE,IAApB;AACD;;AACD,MAAIT,aAAa,CAAC,CAAD,CAAjB,EAAsB;AACpBU,IAAAA,OAAO,CAACC,IAAR,CAAaH,GAAG,GAAGD,IAAN,GAAaE,IAA1B;AACD;;AACD,SAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,aAAa,GAAGZ,IAAI,CAACE,MAAL,KAAgBN,kBAApC;AACAiB,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIhB,aAAa,CAACF,aAAD,CAAjB,EAAkC;AAChCgB,QAAAA,MAAM;AACP,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACH,OAAD,CAAP;AACD;AACF,KANS,EAMPK,aANO,CAAV;AAOD,GATM,CAAP;AAUD,C,CACD","sourcesContent":["// ================================= Mock Server Start =============================\nvar FAILURE_COEFF = 10;\nvar MAX_SERVER_LATENCY = 200;\n\nfunction getRandomBool(n) {\n  var maxRandomCoeff = 1000;\n  if (n > maxRandomCoeff) n = maxRandomCoeff;\n  return Math.floor(Math.random() * maxRandomCoeff) % n === 0;\n}\n\nexport function getSuggestions(text) {\n  var pre = 'pre';\n  var post = 'post';\n  var results = [];\n  if (getRandomBool(2)) {\n    results.push(pre + text);\n  }\n  if (getRandomBool(2)) {\n    results.push(text);\n  }\n  if (getRandomBool(2)) {\n    results.push(text + post);\n  }\n  if (getRandomBool(2)) {\n    results.push(pre + text + post);\n  }\n  return new Promise((resolve, reject) => {\n    var randomTimeout = Math.random() * MAX_SERVER_LATENCY;\n    setTimeout(() => {\n      if (getRandomBool(FAILURE_COEFF)) {\n        reject();\n      } else {\n        resolve(results);\n      }\n    }, randomTimeout);\n  });\n}\n// ================================= Mock Server End ============================="]},"metadata":{},"sourceType":"module"}